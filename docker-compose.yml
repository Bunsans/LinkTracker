services:
  pg:
    image: postgres
    environment:
      POSTGRES_DB: link
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d link -U user" ]
      interval: 5s
      timeout: 3s
      retries: 3

  zookeeper:
    networks:
      - kafka_network
    extends:
      file: docker/zookeeper/docker-compose.zookeeper.yml
      service: zookeeper

  broker1:
    networks:
      - kafka_network
    extends:
      file: docker/kafka/docker-compose.kafka.yml
      service: broker1
    depends_on:
      zookeeper:
        condition: service_healthy

  schemaregistry:
    networks:
      - kafka_network
    extends:
      file: docker/schemaregistry/docker-compose.schemaregistry.yml
      service: schemaregistry
    depends_on:
      zookeeper:
        condition: service_healthy

  control-center:
    networks:
      - kafka_network
    extends:
      file: docker/control-center/docker-compose.control-center.yml
      service: control-center
    depends_on:
      broker1:
        condition: service_healthy
      schemaregistry:
        condition: service_healthy
  redis:
    extends:
      file: docker/redis/docker-compose.redis.yml
      service: redis
networks:
  kafka_network:
    name: kafka_docker_net
volumes:
  redis_data:
    driver: local
